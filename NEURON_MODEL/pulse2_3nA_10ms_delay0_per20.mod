TITLE Mod file for component: Component(id=pulse2_3nA_10ms_delay0_per20 type=pulseGenerator)

COMMENT

    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.7.0
         org.neuroml.model   v1.7.0
         jLEMS               v0.10.2

ENDCOMMENT

NEURON {
    POINT_PROCESS pulse2_3nA_10ms_delay0_per20
    ELECTRODE_CURRENT i
    RANGE weight                            : property
    RANGE delay                             : parameter
    RANGE duration                          : parameter
    RANGE amplitude                         : parameter
    
}

UNITS {
    
    (nA) = (nanoamp)
    (uA) = (microamp)
    (mA) = (milliamp)
    (A) = (amp)
    (mV) = (millivolt)
    (mS) = (millisiemens)
    (uS) = (microsiemens)
    (molar) = (1/liter)
    (kHz) = (kilohertz)
    (mM) = (millimolar)
    (um) = (micrometer)
    (umol) = (micromole)
    (S) = (siemens)
    
}

PARAMETER {
    
    weight = 1
    delay = 0 (ms)
    duration = 10 (ms)
    amplitude = 2.3 (nA)
    durnoamp = 10 (ms)
    nrper = 3
}

STATE {
    i (nA) 
    
}

INITIAL {
    rates()
    rates() ? To ensure correct initialisation.
    
}

BREAKPOINT {
    
    rates()
    if (t <  delay) {
        i = 0 ? standard OnCondition
    }
    
    if (t >=  delay  && t <  delay  +  duration) {
        i = weight  *  amplitude ? standard OnCondition
    }

    if (t >=  duration  +  delay  && t <  delay  +  duration  +  durnoamp) {
        i = 0 ? standard OnCondition
    }
    
    if (t >=  delay  +  duration  +  durnoamp && t < delay  +  2*duration  +  durnoamp) {
        i = weight  *  amplitude ? standard OnCondition
    }

    if (t >=  delay  +  2*duration  +  durnoamp  && t <  delay  +  2*duration  +  2*durnoamp) {
        i = 0 ? standard OnCondition
    }

    if (t >=  delay  +  2*duration  +  2*durnoamp  && t <  delay  +  3*duration  +  2*durnoamp) {
        i = weight  *  amplitude ? standard OnCondition
    }

    if (t >=  delay  +  3*duration  +  2*durnoamp) {
        i = 0 ? standard OnCondition
    }
    
    
}

PROCEDURE rates() {
    
    
     
    
}

