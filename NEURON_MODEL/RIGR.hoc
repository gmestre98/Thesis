// Cell: RIGR
/*
{
  "id" : "RIGR",
  "sections" : [ {
    "name" : "Soma",
    "id" : "Soma",
    "points3d" : [ "-4.7, -241.95001, 20.65, 4.268489", "-4.7, -237.681521, 20.65, 4.268489" ],
    "comments" : "Section in NeuroML is spherical, so using cylindrical section along Y axis for NEURON\n"
  }, {
    "name" : "Axon",
    "id" : "Axon",
    "points3d" : [ "-4.7, -241.95001, 20.65, 1.17047", "-4.7, -241.95001, 20.7, 1.17047", "-4.7, -244.4, 21.5, 0.6", "-4.7, -249.3, 23.5, 0.6", "-4.5499997, -257.6, 28.45, 0.61644137", "-4.3, -271.8, 36.399998, 0.6", "-4.9, -273.15, 38.125, 0.4387482", "-7.175, -273.42502, 39.825, 0.295804", "-8.725, -273.775, 42.449997, 0.44158804", "-9.25, -274.2, 45.5, 0.5", "-8.7, -274.65, 48.525, 0.4387482", "-7.2, -275.0, 51.1, 0.48989794", "-4.8500004, -275.3, 52.824997, 0.48218253", "-2.2, -275.35, 53.399998, 0.5" ],
    "parent" : "Soma",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma_group",
    "groups" : [ ],
    "sections" : [ "Soma" ]
  }, {
    "name" : "axon_group",
    "groups" : [ ],
    "sections" : [ "Axon" ]
  }, {
    "name" : "all",
    "sections" : [ "Soma", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon", "Axon" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "all",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-65.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "30.000002"
  } ],
  "channelDensity" : [ {
    "id" : "LeakConductance_all",
    "ionChannel" : "LeakConductance",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "2.5E-5",
    "erev" : "-65.0"
  } ],
  "species" : [ ]
}
*/

load_file("subiter.hoc")

begintemplate RIGR

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -65.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
}


proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -4.7, -241.95001, 20.65, 4.268489 ) }
    Soma { pt3dadd( -4.7, -237.681521, 20.65, 4.268489 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -4.7, -241.95001, 20.65, 1.17047 ) }
    Axon { pt3dadd( -4.7, -241.95001, 20.7, 1.17047 ) }
    Axon { pt3dadd( -4.7, -244.4, 21.5, 0.6 ) }
    Axon { pt3dadd( -4.7, -249.3, 23.5, 0.6 ) }
    Axon { pt3dadd( -4.5499997, -257.6, 28.45, 0.61644137 ) }
    Axon { pt3dadd( -4.3, -271.8, 36.399998, 0.6 ) }
    Axon { pt3dadd( -4.9, -273.15, 38.125, 0.4387482 ) }
    Axon { pt3dadd( -7.175, -273.42502, 39.825, 0.295804 ) }
    Axon { pt3dadd( -8.725, -273.775, 42.449997, 0.44158804 ) }
    Axon { pt3dadd( -9.25, -274.2, 45.5, 0.5 ) }
    Axon { pt3dadd( -8.7, -274.65, 48.525, 0.4387482 ) }
    Axon { pt3dadd( -7.2, -275.0, 51.1, 0.48989794 ) }
    Axon { pt3dadd( -4.8500004, -275.3, 52.824997, 0.48218253 ) }
    Axon { pt3dadd( -2.2, -275.35, 53.399998, 0.5 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=all, sections=[Soma, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon, Axon]}
    all = new SectionList()
    Soma all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()
    Axon all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec all cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 30.000002  // units: ohm cm

    // Channel densities
    forsec all {
        insert LeakConductance
        gmax_LeakConductance = 2.5E-5  // units: S cm-2
        e_LeakConductance = -65.0  // units: mV
    }

    // Concentration models for species

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate RIGR


